{"version":3,"sources":["components/app/logo.svg","components/projects/index.js","components/projects/Project.js","components/index.js","components/app/App.js","reportWebVitals.js","index.js"],"names":["Project","Component","Bottlescomp","props","state","text","bottles","bottling","timer","button_a","button_b","dobottles","bind","this","scrollToBottom","el","scrollIntoView","behavior","undefined","setState","jsbottles","className","src","logo","alt","style","whiteSpace","class","onClick","t","setInterval","clearInterval","ref","React","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kPAAe,MAA0B,iC,qBCE1BA,E,4JCEb,WACE,OACE,6C,GAHgBC,aCAPC,E,kDCIb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CAACC,KAAM,aAAcC,QAAS,GAAIC,UAAU,EAAOC,MAAO,GAAIC,SAAU,OAAQC,SAAU,QACvG,EAAKC,UAAY,EAAKA,UAAUC,KAAf,gBAHA,E,sDAKnB,WACEC,KAAKC,mB,4BAEP,WACED,KAAKE,GAAGC,eAAe,CAAEC,SAAU,a,uBAErC,SAAUX,GACR,GAAIA,EAAU,EAEV,MAAM,KAAN,QADAA,GAAoB,GAElB,EADF,0CAENA,EAAQ,EAFF,8DAINA,EAJM,mC,uBAON,gBACyBY,IAApBL,KAAKT,MAAMC,MAEVQ,KAAKT,MAAME,QAAQ,GACnBO,KAAKM,SAAS,CAAEd,KAAMQ,KAAKT,MAAMC,KAAO,KAAOQ,KAAKO,UAAUP,KAAKT,MAAME,SAAUA,QAASO,KAAKT,MAAME,QAAU,EAAGC,SAAUM,KAAKT,MAAMG,a,oBAI/I,WAAU,IAAD,OACP,OACA,yBAAQc,UAAU,aAAlB,UACI,qBAAKC,IAAKC,EAAMF,UAAU,WAAWG,IAAI,SACzC,4CAGA,gCACA,uBACA,sBAAMC,MAAO,CAAEC,WAAY,OAA3B,SACKb,KAAKT,MAAMC,UAGhB,uBACA,gCACA,yBAAQsB,MAAM,YAAYC,QAASf,KAAKF,UAAxC,UACGE,KAAKT,MAAMK,SADd,IACyBI,KAAKT,MAAME,WAEpC,wBAAQqB,MAAM,YAAYC,QAAS,WAAO,IAA4B,IAAxB,EAAKxB,MAAMG,SAAoB,CACrF,IAAIsB,EAAIC,YAAY,EAAKnB,UAAW,KACpC,EAAKQ,SAAS,CAACZ,UAAU,EAAMG,SAAU,QAASF,MAAOqB,SAExDE,cAAc,EAAK3B,MAAMI,OAC1B,EAAKW,SAAS,CAACZ,UAAU,EAAOC,MAAO,GAAIC,SAAU,OAAQC,SAAU,UAL/D,SAMCG,KAAKT,MAAMM,cAGZ,qBAAKsB,IAAK,SAAAjB,GAAQ,EAAKA,GAAKA,KAC5B,wBAAQY,MAAM,YAAYC,QAAS,WAAOG,cAAc,EAAK3B,MAAMI,OAAQ,EAAKW,SAAS,CAACb,QAAS,GAAID,KAAM,aAAcE,UAAU,EAAOC,MAAO,GAAIC,SAAU,OAAQC,SAAU,UAAnL,qBACF,cAAC,EAAD,W,GA3DoBuB,IAAMhC,WCMjBiC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.9b33d632.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import Project from './Project';\r\n\r\nexport default Project;","import './Project.css';\r\nimport React, { Component } from 'react';\r\n\r\nclass Project extends Component {\r\n  render() {\r\n    return (\r\n      <h1>Project</h1>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Project;","import Bottlescomp from './app/';\r\nimport Project from './projects/';\r\n\r\nexport default Bottlescomp;\r\nexport {Project};","import logo from './logo.svg';\nimport './App.css';\nimport React, { Component } from 'react';\nimport Project from \"../projects/\"\n\n\nclass Bottlescomp extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {text: \"99 Bottles\", bottles: 99, bottling: false, timer: \"\", button_a: \"Next\", button_b: \"Play\"};\n    this.dobottles = this.dobottles.bind(this);\n  }\n  componentDidUpdate() {\n    this.scrollToBottom();\n  }\n  scrollToBottom() {\n    this.el.scrollIntoView({ behavior: 'smooth' });\n  }\n  jsbottles(bottles) {\n    if (bottles > 0){\n        bottles = bottles - 1;\n        return `\n${bottles+1} bottles of beer on the wall,\n${bottles+1} bottles of beer.\nTake one down, pass it around.\n${bottles} bottles of beer on the wall.`;\n    }\n    }\n  dobottles() {\n    if(this.state.text === undefined) {return}\n    else {\n    if (this.state.bottles>0) {\n        this.setState({ text: this.state.text + \"\\n\" + this.jsbottles(this.state.bottles), bottles: this.state.bottles - 1, bottling: this.state.bottling});\n      }\n    };\n  }\n  render() {\n    return (\n    <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <h1>\n             99 Bottles\n        </h1>\n        <div>\n        <br />\n        <span style={{ whiteSpace: 'pre' }}>\n            {this.state.text}\n        </span>\n        </div>\n        <br />\n        <div>\n        <button class=\"appbutton\" onClick={this.dobottles}>\n          {this.state.button_a} {this.state.bottles}\n        </button>\n        <button class=\"appbutton\" onClick={() => {if (this.state.bottling === false) {\nlet t = setInterval(this.dobottles, 2000);\nthis.setState({bottling: true, button_b: \"Pause\", timer: t})\n} else\n{clearInterval(this.state.timer); \nthis.setState({bottling: false, timer: \"\", button_a: \"Next\", button_b: \"Play\"})}}}>\n        {this.state.button_b}\n        </button>\n        </div>\n        <div ref={el => { this.el = el; }} />\n        <button class=\"appbutton\" onClick={() => {clearInterval(this.state.timer); this.setState({bottles: 99, text: \"99 Bottles\", bottling: false, timer: \"\", button_a: \"Next\", button_b: \"Play\"})}}> Reset </button>\n      <Project />\n      </header>\n    );\n  }\n}\n\nexport default Bottlescomp;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './main.css';\nimport Bottlescomp from './components/';\nimport {Project} from './components/';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Bottlescomp />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}